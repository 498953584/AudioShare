<ui:UiWindow x:Class="AudioShare.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        xmlns:local="clr-namespace:AudioShare"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance Type=local:Model}"
        Title="{DynamicResource title}" Height="360" Width="500" ResizeMode="NoResize"
             ExtendsContentIntoTitleBar="True"
             WindowCornerPreference="Round">
    <ui:UiWindow.Resources>
        <Style TargetType="ui:Button" BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="PressedForeground" Value="White" />
        </Style>
    </ui:UiWindow.Resources>
    <Grid x:Name="WinBackground">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border x:Name="DragHelper" Visibility="Collapsed" Background="#01000000" Height="48"/>
        <ui:TitleBar Title="{Binding Title}" MinimizeToTray="True" Icon="{Binding Icon}"
                     CanMaximize="False" UseSnapLayout="True" ShowMaximize="False" ShowMinimize="False"/>
        <StackPanel Grid.Row="1" VerticalAlignment="Top"  HorizontalAlignment="Center">
            <Grid Width="400">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{DynamicResource startup}" Margin="0 0 5 0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="0"/>
                    <ui:ToggleSwitch IsChecked="{Binding IsStartup}" Width="40" Height="20" VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding AcrylicVisible, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}">
                        <Label Content="{DynamicResource windowAcrylic}" Margin="10 0 5 0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="0"/>
                        <ui:ToggleSwitch IsChecked="{Binding Acrylic}" ToolTip="{DynamicResource effectiveAfterRestart}" Width="40" Height="20" VerticalAlignment="Bottom"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Border Width="10" Height="10" Margin="0 0 5 3" Background="Green" CornerRadius="50" VerticalAlignment="Bottom"
                            Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Label Content="{DynamicResource connected}" Padding="0" VerticalAlignment="Bottom"
                           Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Border Width="10" Height="10" Margin="0 0 5 3" Background="Red" CornerRadius="50" VerticalAlignment="Bottom"
                            Visibility="{Binding UnConnected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Label Content="{DynamicResource unconnected}" Padding="0" VerticalAlignment="Bottom"
                           Visibility="{Binding UnConnected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Label Content=" [ " Padding="0" VerticalAlignment="Bottom"
                           Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Label Content="{Binding ConnectedCount}" Padding="0" VerticalAlignment="Bottom"
                           Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                    <Label Content=" ]" Padding="0" VerticalAlignment="Bottom"
                           Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                </StackPanel>
            </Grid>
            <Label Content="{DynamicResource audioDeviceSelection}" HorizontalContentAlignment="Left" Padding="0 5 0 5"/>
            <StackPanel Height="30" Width="400" Orientation="Horizontal">
                <ComboBox Height="30" Width="220" ItemsSource="{Binding AudioDevices}" VerticalContentAlignment="Center"
                      SelectedValue="{Binding AudioSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="Value" Padding="10 6 10 6" IsEnabled="{Binding AudioEnabled}"/>
                <ComboBox Height="30" Width="80" Margin="10 0 0 0" Padding="6 6 0 6" ItemsSource="{Binding SampleRates}"
                          VerticalAlignment="Center" DisplayMemberPath="Value" IsEnabled="{Binding AudioEnabled}"
                          SelectedValue="{Binding SampleRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <ui:Button Appearance="Info" Height="30" Width="80" Content="{DynamicResource refresh}"
                           Margin="10 0 0 0" Command="{Binding RefreshAudiosCommand}" IsEnabled="{Binding AudioEnabled}"/>
            </StackPanel>
            <Grid Width="400" Margin="0 5 0 0">
                <StackPanel>
                    <Grid>
                        <Label Content="{DynamicResource audioPlaybackDevice}" VerticalContentAlignment="Bottom" Padding="0"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Label Content="USB" Margin="0 0 5 0" VerticalContentAlignment="Bottom" Padding="0"/>
                            <ui:ToggleSwitch IsChecked="{Binding IsUSB}" Width="40" Height="20" VerticalAlignment="Bottom"/>
                            <Grid Margin="10 0 0 0" Visibility="{Binding IsUSB, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}">
                                <ui:Button Appearance="Info" Grid.Column="1" Height="30" Width="80"
                                            Content="{DynamicResource refresh}"
                                            Command="{Binding RefreshSpeakersCommand}"/>
                                <ui:ProgressRing IsIndeterminate="True" Progress="70" Visibility="{Binding AdbLoading, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"
                                     Width="10" Height="10" Padding="3" Margin="10,5,0,5" HorizontalAlignment="Left" VerticalAlignment="Stretch" />
                            </Grid>
                        </StackPanel>

                    </Grid>
                    <ScrollViewer MaxHeight="105" MinHeight="0" Margin="0 5 0 0" Width="420" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <StackPanel>
                            <ListView ItemsSource="{Binding Speakers}"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                             VirtualizingStackPanel.IsVirtualizing="True"
                             VirtualizingStackPanel.VirtualizationMode="Recycling"
                             VirtualizingPanel.ScrollUnit="Pixel">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Padding" Value="12,0,12,0" />
                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <ContentPresenter
                            x:Name="ContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.Style>
                                    <Style TargetType="ListView">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListView">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Style>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Width="400" Orientation="Horizontal" Margin="0 0 0 5">
                                            <Grid Width="310" Height="30">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Height="30" MinHeight="10"  Padding="10 5" VerticalContentAlignment="Center"
                                            Text="{Binding Display}" ToolTip="{Binding Display}" IsReadOnly="{Binding IdReadOnly}"/>
                                                <ComboBox Grid.Column="1" Height="30" Width="80" VerticalContentAlignment="Center" Margin="10 0 0 0"
                                            ItemsSource="{Binding Channels}" IsEnabled="{Binding ChannelEnabled}" Padding="6 6 0 6"
                                            SelectedValue="{Binding ChannelSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            DisplayMemberPath="Value"/>
                                                <Button Grid.Column="2" Height="30" Width="30" Content="&#x2716;" FontWeight="Thin"
                                                        Margin="10 0 0 0" Padding="0" FontSize="11"
                                                        ToolTip="{DynamicResource remove}"
                                                        HorizontalContentAlignment="Center"
                                                        VerticalContentAlignment="Center"
                                                        Command="{Binding RemoveCommand}"
                                                        Visibility="{Binding RemoveVisible, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
                                            </Grid>
                                            <Grid Visibility="{Binding UnConnected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}">
                                                <ui:Button Appearance="Info"  Height="30" Width="80" Margin="10 0 0 0"
                                                Content="{DynamicResource connecte}" IsEnabled="{Binding ConnectEnabled}"
                                                Command="{Binding ConnectCommand}"/>
                                                <ui:ProgressRing IsIndeterminate="True" Visibility="{Binding Connecting, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"
                                                                Width="10" Height="10" Progress="70" Padding="3" Margin="20,5,0,5"
                                                                HorizontalAlignment="Left" VerticalAlignment="Stretch" />
                                            </Grid>
                                            <ui:Button Appearance="Caution" Height="30" Width="80" Margin="10 0 0 0"
                                                Content="{DynamicResource disconnecte}"
                                                Command="{Binding DisConnectCommand}"
                                                Visibility="{Binding Connected, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}">
                                            </ui:Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <ui:Button Appearance="Info" Height="30" Width="400" Content="{DynamicResource add}" Command="{Binding AddIPSpeakerCommand}"
                            Visibility="{Binding AddIPSpeakerVisible, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}" />
                        </StackPanel>
                    </ScrollViewer>

                </StackPanel>
                <Border Background="#01000000" Visibility="{Binding AdbLoading, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"/>
            </Grid>
            <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                <Label Margin="0" Content="{DynamicResource volume}" VerticalAlignment="Bottom" Padding="0"/>
                <Label Content="{Binding Volume}" HorizontalContentAlignment="Center" Width="25" Margin="5 0" VerticalAlignment="Bottom" Padding="0"/>
                <Slider Width="219" Height="16" MinHeight="16" Maximum="100" Margin="0" IsEnabled="{Binding VolumeCustom}" Value="{Binding Volume}" VerticalAlignment="Bottom"/>
                <Label Content="{DynamicResource followSystem}" Margin="5 0 5 0" VerticalAlignment="Bottom" Padding="0"/>
                <ui:ToggleSwitch IsChecked="{Binding VolumeFollowSystem}" Width="40" Height="20" VerticalAlignment="Bottom"/>
            </StackPanel>
            <ui:Button Appearance="Danger"  Height="30" Width="400" Margin="0 10 0 0"
                       Content="{DynamicResource exit}" Click="Exit" />
        </StackPanel>
    </Grid>
</ui:UiWindow>
